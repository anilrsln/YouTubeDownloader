<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>